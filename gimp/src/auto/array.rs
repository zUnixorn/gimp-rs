// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ..
// from ../gir-files
// DO NOT EDIT

use crate::{ffi};
use glib::{translate::*};

glib::wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct Array(Boxed<ffi::GimpArray>);

    match fn {
        copy => |ptr| ffi::gimp_array_copy(ptr),
        free => |ptr| ffi::gimp_array_free(ptr),
        type_ => || ffi::gimp_array_get_type(),
    }
}

impl Array {
    #[doc(alias = "gimp_array_new")]
    pub fn new(data: &[u8], static_data: bool) -> Array {
        assert_initialized_main_thread!();
        let length = data.len() as _;
        unsafe {
            from_glib_full(ffi::gimp_array_new(data.to_glib_none().0, length, static_data.into_glib()))
        }
    }
}
