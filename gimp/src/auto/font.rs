// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ..
// from ../gir-files
// DO NOT EDIT

use crate::{ffi,Resource};
use glib::{translate::*};

glib::wrapper! {
    /// Installable object used by text tools.
    ///
    /// # Implements
    ///
    /// [`ResourceExt`][trait@crate::prelude::ResourceExt], [`trait@glib::ObjectExt`]
    #[doc(alias = "GimpFont")]
    pub struct Font(Object<ffi::GimpFont, ffi::GimpFontClass>) @extends Resource;

    match fn {
        type_ => || ffi::gimp_font_get_type(),
    }
}

impl Font {
    /// Returns a [struct`Pango`] representing `self`.
    ///
    /// # Returns
    ///
    /// a [`pango::FontDescription`][crate::pango::FontDescription] representing `self`.
    #[doc(alias = "gimp_font_get_pango_font_description")]
    #[doc(alias = "get_pango_font_description")]
    pub fn pango_font_description(&self) -> Option<pango::FontDescription> {
        unsafe {
            from_glib_full(ffi::gimp_font_get_pango_font_description(self.to_glib_none().0))
        }
    }

    /// Returns a font with the given name.
    ///
    /// If several fonts are named identically, the one which is returned by
    /// this function should be considered random. This can be used when you
    /// know you won't have multiple fonts of this name or that you don't
    /// want to choose (non-interactive scripts, etc.).
    /// If you need more control, you should use [func`fonts_get_list`]
    /// instead.
    /// Returns [`None`] when no font exists of that name.
    /// ## `name`
    /// The name of the font.
    ///
    /// # Returns
    ///
    /// The font.
    #[doc(alias = "gimp_font_get_by_name")]
    #[doc(alias = "get_by_name")]
    pub fn by_name(name: &str) -> Option<Font> {
        assert_initialized_main_thread!();
        unsafe {
            from_glib_none(ffi::gimp_font_get_by_name(name.to_glib_none().0))
        }
    }
}
