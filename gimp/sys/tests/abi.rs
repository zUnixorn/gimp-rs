// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ../..
// from ../../gir-files
// DO NOT EDIT

#![cfg(unix)]

use gimp_sys::*;
use std::mem::{align_of, size_of};
use std::env;
use std::error::Error;
use std::ffi::OsString;
use std::path::Path;
use std::process::{Command, Stdio};
use std::str;
use tempfile::Builder;

static PACKAGES: &[&str] = &["gimp-3.0"];

#[derive(Clone, Debug)]
struct Compiler {
    pub args: Vec<String>,
}

impl Compiler {
    pub fn new() -> Result<Self, Box<dyn Error>> {
        let mut args = get_var("CC", "cc")?;
        args.push("-Wno-deprecated-declarations".to_owned());
        // For _Generic
        args.push("-std=c11".to_owned());
        // For %z support in printf when using MinGW.
        args.push("-D__USE_MINGW_ANSI_STDIO".to_owned());
        args.extend(get_var("CFLAGS", "")?);
        args.extend(get_var("CPPFLAGS", "")?);
        args.extend(pkg_config_cflags(PACKAGES)?);
        Ok(Self { args })
    }

    pub fn compile(&self, src: &Path, out: &Path) -> Result<(), Box<dyn Error>> {
        let mut cmd = self.to_command();
        cmd.arg(src);
        cmd.arg("-o");
        cmd.arg(out);
        let status = cmd.spawn()?.wait()?;
        if !status.success() {
            return Err(format!("compilation command {cmd:?} failed, {status}").into());
        }
        Ok(())
    }

    fn to_command(&self) -> Command {
        let mut cmd = Command::new(&self.args[0]);
        cmd.args(&self.args[1..]);
        cmd
    }
}

fn get_var(name: &str, default: &str) -> Result<Vec<String>, Box<dyn Error>> {
    match env::var(name) {
        Ok(value) => Ok(shell_words::split(&value)?),
        Err(env::VarError::NotPresent) => Ok(shell_words::split(default)?),
        Err(err) => Err(format!("{name} {err}").into()),
    }
}

fn pkg_config_cflags(packages: &[&str]) -> Result<Vec<String>, Box<dyn Error>> {
    if packages.is_empty() {
        return Ok(Vec::new());
    }
    let pkg_config = env::var_os("PKG_CONFIG")
        .unwrap_or_else(|| OsString::from("pkg-config"));
    let mut cmd = Command::new(pkg_config);
    cmd.arg("--cflags");
    cmd.args(packages);
    cmd.stderr(Stdio::inherit());
    let out = cmd.output()?;
    if !out.status.success() {
        let (status, stdout) = (out.status, String::from_utf8_lossy(&out.stdout));
        return Err(format!("command {cmd:?} failed, {status:?}\nstdout: {stdout}").into());
    }
    let stdout = str::from_utf8(&out.stdout)?;
    Ok(shell_words::split(stdout.trim())?)
}


#[derive(Copy, Clone, Debug, Eq, PartialEq)]
struct Layout {
    size: usize,
    alignment: usize,
}

#[derive(Copy, Clone, Debug, Default, Eq, PartialEq)]
struct Results {
    passed: usize,
    failed: usize,
}

impl Results {
    fn record_passed(&mut self) {
        self.passed += 1;
    }
    fn record_failed(&mut self) {
        self.failed += 1;
    }
    fn summary(&self) -> String {
        format!("{} passed; {} failed", self.passed, self.failed)
    }
    fn expect_total_success(&self) {
        if self.failed == 0 {
            println!("OK: {}", self.summary());
        } else {
            panic!("FAILED: {}", self.summary());
        };
    }
}

#[test]
fn cross_validate_constants_with_c() {
    let mut c_constants: Vec<(String, String)> = Vec::new();

    for l in get_c_output("constant").unwrap().lines() {
        let (name, value) = l.split_once(';').expect("Missing ';' separator");
        c_constants.push((name.to_owned(), value.to_owned()));
    }

    let mut results = Results::default();

    for ((rust_name, rust_value), (c_name, c_value)) in
        RUST_CONSTANTS.iter().zip(c_constants.iter())
    {
        if rust_name != c_name {
            results.record_failed();
            eprintln!("Name mismatch:\nRust: {rust_name:?}\nC:    {c_name:?}");
            continue;
        }

        if rust_value != c_value {
            results.record_failed();
            eprintln!(
                "Constant value mismatch for {rust_name}\nRust: {rust_value:?}\nC:    {c_value:?}",
            );
            continue;
        }

        results.record_passed();
    }

    results.expect_total_success();
}

#[test]
fn cross_validate_layout_with_c() {
    let mut c_layouts = Vec::new();

    for l in get_c_output("layout").unwrap().lines() {
        let (name, value) = l.split_once(';').expect("Missing first ';' separator");
        let (size, alignment) = value.split_once(';').expect("Missing second ';' separator");
        let size = size.parse().expect("Failed to parse size");
        let alignment = alignment.parse().expect("Failed to parse alignment");
        c_layouts.push((name.to_owned(), Layout { size, alignment }));
    }

    let mut results = Results::default();

    for ((rust_name, rust_layout), (c_name, c_layout)) in
        RUST_LAYOUTS.iter().zip(c_layouts.iter())
    {
        if rust_name != c_name {
            results.record_failed();
            eprintln!("Name mismatch:\nRust: {rust_name:?}\nC:    {c_name:?}");
            continue;
        }

        if rust_layout != c_layout {
            results.record_failed();
            eprintln!(
                "Layout mismatch for {rust_name}\nRust: {rust_layout:?}\nC:    {c_layout:?}",
            );
            continue;
        }

        results.record_passed();
    }

    results.expect_total_success();
}

fn get_c_output(name: &str) -> Result<String, Box<dyn Error>> {
    let tmpdir = Builder::new().prefix("abi").tempdir()?;
    let exe = tmpdir.path().join(name);
    let c_file = Path::new("tests").join(name).with_extension("c");

    let cc = Compiler::new().expect("configured compiler");
    cc.compile(&c_file, &exe)?;

    let mut cmd = Command::new(exe);
    cmd.stderr(Stdio::inherit());
    let out = cmd.output()?;
    if !out.status.success() {
        let (status, stdout) = (out.status, String::from_utf8_lossy(&out.stdout));
        return Err(format!("command {cmd:?} failed, {status:?}\nstdout: {stdout}").into());
    }

    Ok(String::from_utf8(out.stdout)?)
}

const RUST_LAYOUTS: &[(&str, Layout)] = &[
    ("GimpAddMaskType", Layout {size: size_of::<GimpAddMaskType>(), alignment: align_of::<GimpAddMaskType>()}),
    ("GimpArgumentSync", Layout {size: size_of::<GimpArgumentSync>(), alignment: align_of::<GimpArgumentSync>()}),
    ("GimpArray", Layout {size: size_of::<GimpArray>(), alignment: align_of::<GimpArray>()}),
    ("GimpBablFormat", Layout {size: size_of::<GimpBablFormat>(), alignment: align_of::<GimpBablFormat>()}),
    ("GimpBatchProcedureClass", Layout {size: size_of::<GimpBatchProcedureClass>(), alignment: align_of::<GimpBatchProcedureClass>()}),
    ("GimpBrushApplicationMode", Layout {size: size_of::<GimpBrushApplicationMode>(), alignment: align_of::<GimpBrushApplicationMode>()}),
    ("GimpBrushClass", Layout {size: size_of::<GimpBrushClass>(), alignment: align_of::<GimpBrushClass>()}),
    ("GimpBrushGeneratedShape", Layout {size: size_of::<GimpBrushGeneratedShape>(), alignment: align_of::<GimpBrushGeneratedShape>()}),
    ("GimpCapStyle", Layout {size: size_of::<GimpCapStyle>(), alignment: align_of::<GimpCapStyle>()}),
    ("GimpChannel", Layout {size: size_of::<GimpChannel>(), alignment: align_of::<GimpChannel>()}),
    ("GimpChannelClass", Layout {size: size_of::<GimpChannelClass>(), alignment: align_of::<GimpChannelClass>()}),
    ("GimpChannelOps", Layout {size: size_of::<GimpChannelOps>(), alignment: align_of::<GimpChannelOps>()}),
    ("GimpChannelType", Layout {size: size_of::<GimpChannelType>(), alignment: align_of::<GimpChannelType>()}),
    ("GimpCheckSize", Layout {size: size_of::<GimpCheckSize>(), alignment: align_of::<GimpCheckSize>()}),
    ("GimpCheckType", Layout {size: size_of::<GimpCheckType>(), alignment: align_of::<GimpCheckType>()}),
    ("GimpChoiceClass", Layout {size: size_of::<GimpChoiceClass>(), alignment: align_of::<GimpChoiceClass>()}),
    ("GimpCloneType", Layout {size: size_of::<GimpCloneType>(), alignment: align_of::<GimpCloneType>()}),
    ("GimpColorArray", Layout {size: size_of::<GimpColorArray>(), alignment: align_of::<GimpColorArray>()}),
    ("GimpColorConfigClass", Layout {size: size_of::<GimpColorConfigClass>(), alignment: align_of::<GimpColorConfigClass>()}),
    ("GimpColorManagedInterface", Layout {size: size_of::<GimpColorManagedInterface>(), alignment: align_of::<GimpColorManagedInterface>()}),
    ("GimpColorManagementMode", Layout {size: size_of::<GimpColorManagementMode>(), alignment: align_of::<GimpColorManagementMode>()}),
    ("GimpColorProfileClass", Layout {size: size_of::<GimpColorProfileClass>(), alignment: align_of::<GimpColorProfileClass>()}),
    ("GimpColorRenderingIntent", Layout {size: size_of::<GimpColorRenderingIntent>(), alignment: align_of::<GimpColorRenderingIntent>()}),
    ("GimpColorTag", Layout {size: size_of::<GimpColorTag>(), alignment: align_of::<GimpColorTag>()}),
    ("GimpColorTransformClass", Layout {size: size_of::<GimpColorTransformClass>(), alignment: align_of::<GimpColorTransformClass>()}),
    ("GimpColorTransformFlags", Layout {size: size_of::<GimpColorTransformFlags>(), alignment: align_of::<GimpColorTransformFlags>()}),
    ("GimpComponentType", Layout {size: size_of::<GimpComponentType>(), alignment: align_of::<GimpComponentType>()}),
    ("GimpConfigError", Layout {size: size_of::<GimpConfigError>(), alignment: align_of::<GimpConfigError>()}),
    ("GimpConfigPathType", Layout {size: size_of::<GimpConfigPathType>(), alignment: align_of::<GimpConfigPathType>()}),
    ("GimpConvertDitherType", Layout {size: size_of::<GimpConvertDitherType>(), alignment: align_of::<GimpConvertDitherType>()}),
    ("GimpConvertPaletteType", Layout {size: size_of::<GimpConvertPaletteType>(), alignment: align_of::<GimpConvertPaletteType>()}),
    ("GimpConvolveType", Layout {size: size_of::<GimpConvolveType>(), alignment: align_of::<GimpConvolveType>()}),
    ("GimpCoreObjectArray", Layout {size: size_of::<GimpCoreObjectArray>(), alignment: align_of::<GimpCoreObjectArray>()}),
    ("GimpDesaturateMode", Layout {size: size_of::<GimpDesaturateMode>(), alignment: align_of::<GimpDesaturateMode>()}),
    ("GimpDisplayClass", Layout {size: size_of::<GimpDisplayClass>(), alignment: align_of::<GimpDisplayClass>()}),
    ("GimpDodgeBurnType", Layout {size: size_of::<GimpDodgeBurnType>(), alignment: align_of::<GimpDodgeBurnType>()}),
    ("GimpDrawable", Layout {size: size_of::<GimpDrawable>(), alignment: align_of::<GimpDrawable>()}),
    ("GimpDrawableClass", Layout {size: size_of::<GimpDrawableClass>(), alignment: align_of::<GimpDrawableClass>()}),
    ("GimpDrawableFilterClass", Layout {size: size_of::<GimpDrawableFilterClass>(), alignment: align_of::<GimpDrawableFilterClass>()}),
    ("GimpDrawableFilterConfig", Layout {size: size_of::<GimpDrawableFilterConfig>(), alignment: align_of::<GimpDrawableFilterConfig>()}),
    ("GimpDrawableFilterConfigClass", Layout {size: size_of::<GimpDrawableFilterConfigClass>(), alignment: align_of::<GimpDrawableFilterConfigClass>()}),
    ("GimpEnumDesc", Layout {size: size_of::<GimpEnumDesc>(), alignment: align_of::<GimpEnumDesc>()}),
    ("GimpExportCapabilities", Layout {size: size_of::<GimpExportCapabilities>(), alignment: align_of::<GimpExportCapabilities>()}),
    ("GimpExportOptionsClass", Layout {size: size_of::<GimpExportOptionsClass>(), alignment: align_of::<GimpExportOptionsClass>()}),
    ("GimpExportProcedureClass", Layout {size: size_of::<GimpExportProcedureClass>(), alignment: align_of::<GimpExportProcedureClass>()}),
    ("GimpExportReturn", Layout {size: size_of::<GimpExportReturn>(), alignment: align_of::<GimpExportReturn>()}),
    ("GimpFileProcedure", Layout {size: size_of::<GimpFileProcedure>(), alignment: align_of::<GimpFileProcedure>()}),
    ("GimpFileProcedureClass", Layout {size: size_of::<GimpFileProcedureClass>(), alignment: align_of::<GimpFileProcedureClass>()}),
    ("GimpFillType", Layout {size: size_of::<GimpFillType>(), alignment: align_of::<GimpFillType>()}),
    ("GimpFlagsDesc", Layout {size: size_of::<GimpFlagsDesc>(), alignment: align_of::<GimpFlagsDesc>()}),
    ("GimpFontClass", Layout {size: size_of::<GimpFontClass>(), alignment: align_of::<GimpFontClass>()}),
    ("GimpForegroundExtractMode", Layout {size: size_of::<GimpForegroundExtractMode>(), alignment: align_of::<GimpForegroundExtractMode>()}),
    ("GimpGradientBlendColorSpace", Layout {size: size_of::<GimpGradientBlendColorSpace>(), alignment: align_of::<GimpGradientBlendColorSpace>()}),
    ("GimpGradientClass", Layout {size: size_of::<GimpGradientClass>(), alignment: align_of::<GimpGradientClass>()}),
    ("GimpGradientSegmentColor", Layout {size: size_of::<GimpGradientSegmentColor>(), alignment: align_of::<GimpGradientSegmentColor>()}),
    ("GimpGradientSegmentType", Layout {size: size_of::<GimpGradientSegmentType>(), alignment: align_of::<GimpGradientSegmentType>()}),
    ("GimpGradientType", Layout {size: size_of::<GimpGradientType>(), alignment: align_of::<GimpGradientType>()}),
    ("GimpGridStyle", Layout {size: size_of::<GimpGridStyle>(), alignment: align_of::<GimpGridStyle>()}),
    ("GimpGroupLayerClass", Layout {size: size_of::<GimpGroupLayerClass>(), alignment: align_of::<GimpGroupLayerClass>()}),
    ("GimpHistogramChannel", Layout {size: size_of::<GimpHistogramChannel>(), alignment: align_of::<GimpHistogramChannel>()}),
    ("GimpHueRange", Layout {size: size_of::<GimpHueRange>(), alignment: align_of::<GimpHueRange>()}),
    ("GimpIconType", Layout {size: size_of::<GimpIconType>(), alignment: align_of::<GimpIconType>()}),
    ("GimpImageBaseType", Layout {size: size_of::<GimpImageBaseType>(), alignment: align_of::<GimpImageBaseType>()}),
    ("GimpImageClass", Layout {size: size_of::<GimpImageClass>(), alignment: align_of::<GimpImageClass>()}),
    ("GimpImageProcedureClass", Layout {size: size_of::<GimpImageProcedureClass>(), alignment: align_of::<GimpImageProcedureClass>()}),
    ("GimpImageType", Layout {size: size_of::<GimpImageType>(), alignment: align_of::<GimpImageType>()}),
    ("GimpInkBlobType", Layout {size: size_of::<GimpInkBlobType>(), alignment: align_of::<GimpInkBlobType>()}),
    ("GimpInterpolationType", Layout {size: size_of::<GimpInterpolationType>(), alignment: align_of::<GimpInterpolationType>()}),
    ("GimpItem", Layout {size: size_of::<GimpItem>(), alignment: align_of::<GimpItem>()}),
    ("GimpItemClass", Layout {size: size_of::<GimpItemClass>(), alignment: align_of::<GimpItemClass>()}),
    ("GimpJoinStyle", Layout {size: size_of::<GimpJoinStyle>(), alignment: align_of::<GimpJoinStyle>()}),
    ("GimpLayer", Layout {size: size_of::<GimpLayer>(), alignment: align_of::<GimpLayer>()}),
    ("GimpLayerClass", Layout {size: size_of::<GimpLayerClass>(), alignment: align_of::<GimpLayerClass>()}),
    ("GimpLayerColorSpace", Layout {size: size_of::<GimpLayerColorSpace>(), alignment: align_of::<GimpLayerColorSpace>()}),
    ("GimpLayerCompositeMode", Layout {size: size_of::<GimpLayerCompositeMode>(), alignment: align_of::<GimpLayerCompositeMode>()}),
    ("GimpLayerMaskClass", Layout {size: size_of::<GimpLayerMaskClass>(), alignment: align_of::<GimpLayerMaskClass>()}),
    ("GimpLayerMode", Layout {size: size_of::<GimpLayerMode>(), alignment: align_of::<GimpLayerMode>()}),
    ("GimpLoadProcedure", Layout {size: size_of::<GimpLoadProcedure>(), alignment: align_of::<GimpLoadProcedure>()}),
    ("GimpLoadProcedureClass", Layout {size: size_of::<GimpLoadProcedureClass>(), alignment: align_of::<GimpLoadProcedureClass>()}),
    ("GimpMaskApplyMode", Layout {size: size_of::<GimpMaskApplyMode>(), alignment: align_of::<GimpMaskApplyMode>()}),
    ("GimpMatrix2", Layout {size: size_of::<GimpMatrix2>(), alignment: align_of::<GimpMatrix2>()}),
    ("GimpMatrix3", Layout {size: size_of::<GimpMatrix3>(), alignment: align_of::<GimpMatrix3>()}),
    ("GimpMatrix4", Layout {size: size_of::<GimpMatrix4>(), alignment: align_of::<GimpMatrix4>()}),
    ("GimpMergeType", Layout {size: size_of::<GimpMergeType>(), alignment: align_of::<GimpMergeType>()}),
    ("GimpMessageHandlerType", Layout {size: size_of::<GimpMessageHandlerType>(), alignment: align_of::<GimpMessageHandlerType>()}),
    ("GimpMetadataColorspace", Layout {size: size_of::<GimpMetadataColorspace>(), alignment: align_of::<GimpMetadataColorspace>()}),
    ("GimpMetadataLoadFlags", Layout {size: size_of::<GimpMetadataLoadFlags>(), alignment: align_of::<GimpMetadataLoadFlags>()}),
    ("GimpMetadataSaveFlags", Layout {size: size_of::<GimpMetadataSaveFlags>(), alignment: align_of::<GimpMetadataSaveFlags>()}),
    ("GimpModule", Layout {size: size_of::<GimpModule>(), alignment: align_of::<GimpModule>()}),
    ("GimpModuleClass", Layout {size: size_of::<GimpModuleClass>(), alignment: align_of::<GimpModuleClass>()}),
    ("GimpModuleDBClass", Layout {size: size_of::<GimpModuleDBClass>(), alignment: align_of::<GimpModuleDBClass>()}),
    ("GimpModuleError", Layout {size: size_of::<GimpModuleError>(), alignment: align_of::<GimpModuleError>()}),
    ("GimpModuleInfo", Layout {size: size_of::<GimpModuleInfo>(), alignment: align_of::<GimpModuleInfo>()}),
    ("GimpModuleState", Layout {size: size_of::<GimpModuleState>(), alignment: align_of::<GimpModuleState>()}),
    ("GimpOffsetType", Layout {size: size_of::<GimpOffsetType>(), alignment: align_of::<GimpOffsetType>()}),
    ("GimpOrientationType", Layout {size: size_of::<GimpOrientationType>(), alignment: align_of::<GimpOrientationType>()}),
    ("GimpPDBClass", Layout {size: size_of::<GimpPDBClass>(), alignment: align_of::<GimpPDBClass>()}),
    ("GimpPDBErrorHandler", Layout {size: size_of::<GimpPDBErrorHandler>(), alignment: align_of::<GimpPDBErrorHandler>()}),
    ("GimpPDBProcType", Layout {size: size_of::<GimpPDBProcType>(), alignment: align_of::<GimpPDBProcType>()}),
    ("GimpPDBStatusType", Layout {size: size_of::<GimpPDBStatusType>(), alignment: align_of::<GimpPDBStatusType>()}),
    ("GimpPaintApplicationMode", Layout {size: size_of::<GimpPaintApplicationMode>(), alignment: align_of::<GimpPaintApplicationMode>()}),
    ("GimpPaletteClass", Layout {size: size_of::<GimpPaletteClass>(), alignment: align_of::<GimpPaletteClass>()}),
    ("GimpParamSpecCoreObjectArray", Layout {size: size_of::<GimpParamSpecCoreObjectArray>(), alignment: align_of::<GimpParamSpecCoreObjectArray>()}),
    ("GimpParamSpecDisplay", Layout {size: size_of::<GimpParamSpecDisplay>(), alignment: align_of::<GimpParamSpecDisplay>()}),
    ("GimpParamSpecDrawableFilter", Layout {size: size_of::<GimpParamSpecDrawableFilter>(), alignment: align_of::<GimpParamSpecDrawableFilter>()}),
    ("GimpParamSpecImage", Layout {size: size_of::<GimpParamSpecImage>(), alignment: align_of::<GimpParamSpecImage>()}),
    ("GimpParamSpecItem", Layout {size: size_of::<GimpParamSpecItem>(), alignment: align_of::<GimpParamSpecItem>()}),
    ("GimpParamSpecObject", Layout {size: size_of::<GimpParamSpecObject>(), alignment: align_of::<GimpParamSpecObject>()}),
    ("GimpParamSpecObjectClass", Layout {size: size_of::<GimpParamSpecObjectClass>(), alignment: align_of::<GimpParamSpecObjectClass>()}),
    ("GimpParamSpecResource", Layout {size: size_of::<GimpParamSpecResource>(), alignment: align_of::<GimpParamSpecResource>()}),
    ("GimpParamSpecUnit", Layout {size: size_of::<GimpParamSpecUnit>(), alignment: align_of::<GimpParamSpecUnit>()}),
    ("GimpParamSpecValueArray", Layout {size: size_of::<GimpParamSpecValueArray>(), alignment: align_of::<GimpParamSpecValueArray>()}),
    ("GimpParasite", Layout {size: size_of::<GimpParasite>(), alignment: align_of::<GimpParasite>()}),
    ("GimpPathClass", Layout {size: size_of::<GimpPathClass>(), alignment: align_of::<GimpPathClass>()}),
    ("GimpPathStrokeType", Layout {size: size_of::<GimpPathStrokeType>(), alignment: align_of::<GimpPathStrokeType>()}),
    ("GimpPatternClass", Layout {size: size_of::<GimpPatternClass>(), alignment: align_of::<GimpPatternClass>()}),
    ("GimpPixPipeParams", Layout {size: size_of::<GimpPixPipeParams>(), alignment: align_of::<GimpPixPipeParams>()}),
    ("GimpPixbufTransparency", Layout {size: size_of::<GimpPixbufTransparency>(), alignment: align_of::<GimpPixbufTransparency>()}),
    ("GimpPlugIn", Layout {size: size_of::<GimpPlugIn>(), alignment: align_of::<GimpPlugIn>()}),
    ("GimpPlugInClass", Layout {size: size_of::<GimpPlugInClass>(), alignment: align_of::<GimpPlugInClass>()}),
    ("GimpPrecision", Layout {size: size_of::<GimpPrecision>(), alignment: align_of::<GimpPrecision>()}),
    ("GimpProcedure", Layout {size: size_of::<GimpProcedure>(), alignment: align_of::<GimpProcedure>()}),
    ("GimpProcedureClass", Layout {size: size_of::<GimpProcedureClass>(), alignment: align_of::<GimpProcedureClass>()}),
    ("GimpProcedureConfig", Layout {size: size_of::<GimpProcedureConfig>(), alignment: align_of::<GimpProcedureConfig>()}),
    ("GimpProcedureConfigClass", Layout {size: size_of::<GimpProcedureConfigClass>(), alignment: align_of::<GimpProcedureConfigClass>()}),
    ("GimpProcedureSensitivityMask", Layout {size: size_of::<GimpProcedureSensitivityMask>(), alignment: align_of::<GimpProcedureSensitivityMask>()}),
    ("GimpProgressCommand", Layout {size: size_of::<GimpProgressCommand>(), alignment: align_of::<GimpProgressCommand>()}),
    ("GimpProgressVtable", Layout {size: size_of::<GimpProgressVtable>(), alignment: align_of::<GimpProgressVtable>()}),
    ("GimpRepeatMode", Layout {size: size_of::<GimpRepeatMode>(), alignment: align_of::<GimpRepeatMode>()}),
    ("GimpResource", Layout {size: size_of::<GimpResource>(), alignment: align_of::<GimpResource>()}),
    ("GimpResourceClass", Layout {size: size_of::<GimpResourceClass>(), alignment: align_of::<GimpResourceClass>()}),
    ("GimpRotationType", Layout {size: size_of::<GimpRotationType>(), alignment: align_of::<GimpRotationType>()}),
    ("GimpRunMode", Layout {size: size_of::<GimpRunMode>(), alignment: align_of::<GimpRunMode>()}),
    ("GimpSelectCriterion", Layout {size: size_of::<GimpSelectCriterion>(), alignment: align_of::<GimpSelectCriterion>()}),
    ("GimpSelectionClass", Layout {size: size_of::<GimpSelectionClass>(), alignment: align_of::<GimpSelectionClass>()}),
    ("GimpSizeType", Layout {size: size_of::<GimpSizeType>(), alignment: align_of::<GimpSizeType>()}),
    ("GimpStackTraceMode", Layout {size: size_of::<GimpStackTraceMode>(), alignment: align_of::<GimpStackTraceMode>()}),
    ("GimpStrokeMethod", Layout {size: size_of::<GimpStrokeMethod>(), alignment: align_of::<GimpStrokeMethod>()}),
    ("GimpTextDirection", Layout {size: size_of::<GimpTextDirection>(), alignment: align_of::<GimpTextDirection>()}),
    ("GimpTextHintStyle", Layout {size: size_of::<GimpTextHintStyle>(), alignment: align_of::<GimpTextHintStyle>()}),
    ("GimpTextJustification", Layout {size: size_of::<GimpTextJustification>(), alignment: align_of::<GimpTextJustification>()}),
    ("GimpTextLayerClass", Layout {size: size_of::<GimpTextLayerClass>(), alignment: align_of::<GimpTextLayerClass>()}),
    ("GimpThumbnailProcedureClass", Layout {size: size_of::<GimpThumbnailProcedureClass>(), alignment: align_of::<GimpThumbnailProcedureClass>()}),
    ("GimpTransferMode", Layout {size: size_of::<GimpTransferMode>(), alignment: align_of::<GimpTransferMode>()}),
    ("GimpTransformDirection", Layout {size: size_of::<GimpTransformDirection>(), alignment: align_of::<GimpTransformDirection>()}),
    ("GimpTransformResize", Layout {size: size_of::<GimpTransformResize>(), alignment: align_of::<GimpTransformResize>()}),
    ("GimpUnitClass", Layout {size: size_of::<GimpUnitClass>(), alignment: align_of::<GimpUnitClass>()}),
    ("GimpUnitID", Layout {size: size_of::<GimpUnitID>(), alignment: align_of::<GimpUnitID>()}),
    ("GimpVector2", Layout {size: size_of::<GimpVector2>(), alignment: align_of::<GimpVector2>()}),
    ("GimpVector3", Layout {size: size_of::<GimpVector3>(), alignment: align_of::<GimpVector3>()}),
    ("GimpVector4", Layout {size: size_of::<GimpVector4>(), alignment: align_of::<GimpVector4>()}),
    ("GimpVectorLoadData", Layout {size: size_of::<GimpVectorLoadData>(), alignment: align_of::<GimpVectorLoadData>()}),
    ("GimpVectorLoadProcedureClass", Layout {size: size_of::<GimpVectorLoadProcedureClass>(), alignment: align_of::<GimpVectorLoadProcedureClass>()}),
];

const RUST_CONSTANTS: &[(&str, &str)] = &[
    ("(gint) GIMP_ADD_MASK_ALPHA", "2"),
    ("(gint) GIMP_ADD_MASK_ALPHA_TRANSFER", "3"),
    ("(gint) GIMP_ADD_MASK_BLACK", "1"),
    ("(gint) GIMP_ADD_MASK_CHANNEL", "6"),
    ("(gint) GIMP_ADD_MASK_COPY", "5"),
    ("(gint) GIMP_ADD_MASK_SELECTION", "4"),
    ("(gint) GIMP_ADD_MASK_WHITE", "0"),
    ("GIMP_API_VERSION", "3.0"),
    ("(gint) GIMP_ARGUMENT_SYNC_NONE", "0"),
    ("(gint) GIMP_ARGUMENT_SYNC_PARASITE", "1"),
    ("(gint) GIMP_BRUSH_GENERATED_CIRCLE", "0"),
    ("(gint) GIMP_BRUSH_GENERATED_DIAMOND", "2"),
    ("(gint) GIMP_BRUSH_GENERATED_SQUARE", "1"),
    ("(gint) GIMP_BRUSH_HARD", "0"),
    ("(gint) GIMP_BRUSH_SOFT", "1"),
    ("(gint) GIMP_CAP_BUTT", "0"),
    ("(gint) GIMP_CAP_ROUND", "1"),
    ("(gint) GIMP_CAP_SQUARE", "2"),
    ("(gint) GIMP_CHANNEL_ALPHA", "5"),
    ("(gint) GIMP_CHANNEL_BLUE", "2"),
    ("(gint) GIMP_CHANNEL_GRAY", "3"),
    ("(gint) GIMP_CHANNEL_GREEN", "1"),
    ("(gint) GIMP_CHANNEL_INDEXED", "4"),
    ("(gint) GIMP_CHANNEL_OP_ADD", "0"),
    ("(gint) GIMP_CHANNEL_OP_INTERSECT", "3"),
    ("(gint) GIMP_CHANNEL_OP_REPLACE", "2"),
    ("(gint) GIMP_CHANNEL_OP_SUBTRACT", "1"),
    ("(gint) GIMP_CHANNEL_RED", "0"),
    ("GIMP_CHECK_DARK", "0.400000"),
    ("GIMP_CHECK_LIGHT", "0.600000"),
    ("GIMP_CHECK_SIZE", "8"),
    ("(gint) GIMP_CHECK_SIZE_LARGE_CHECKS", "2"),
    ("(gint) GIMP_CHECK_SIZE_MEDIUM_CHECKS", "1"),
    ("GIMP_CHECK_SIZE_SM", "4"),
    ("(gint) GIMP_CHECK_SIZE_SMALL_CHECKS", "0"),
    ("(gint) GIMP_CHECK_TYPE_BLACK_ONLY", "5"),
    ("(gint) GIMP_CHECK_TYPE_CUSTOM_CHECKS", "6"),
    ("(gint) GIMP_CHECK_TYPE_DARK_CHECKS", "2"),
    ("(gint) GIMP_CHECK_TYPE_GRAY_CHECKS", "1"),
    ("(gint) GIMP_CHECK_TYPE_GRAY_ONLY", "4"),
    ("(gint) GIMP_CHECK_TYPE_LIGHT_CHECKS", "0"),
    ("(gint) GIMP_CHECK_TYPE_WHITE_ONLY", "3"),
    ("(gint) GIMP_CLIP_TO_BOTTOM_LAYER", "2"),
    ("(gint) GIMP_CLIP_TO_IMAGE", "1"),
    ("(gint) GIMP_CLONE_IMAGE", "0"),
    ("(gint) GIMP_CLONE_PATTERN", "1"),
    ("(gint) GIMP_COLOR_MANAGEMENT_DISPLAY", "1"),
    ("(gint) GIMP_COLOR_MANAGEMENT_OFF", "0"),
    ("(gint) GIMP_COLOR_MANAGEMENT_SOFTPROOF", "2"),
    ("(gint) GIMP_COLOR_RENDERING_INTENT_ABSOLUTE_COLORIMETRIC", "3"),
    ("(gint) GIMP_COLOR_RENDERING_INTENT_PERCEPTUAL", "0"),
    ("(gint) GIMP_COLOR_RENDERING_INTENT_RELATIVE_COLORIMETRIC", "1"),
    ("(gint) GIMP_COLOR_RENDERING_INTENT_SATURATION", "2"),
    ("(gint) GIMP_COLOR_TAG_BLUE", "1"),
    ("(gint) GIMP_COLOR_TAG_BROWN", "5"),
    ("(gint) GIMP_COLOR_TAG_GRAY", "8"),
    ("(gint) GIMP_COLOR_TAG_GREEN", "2"),
    ("(gint) GIMP_COLOR_TAG_NONE", "0"),
    ("(gint) GIMP_COLOR_TAG_ORANGE", "4"),
    ("(gint) GIMP_COLOR_TAG_RED", "6"),
    ("(gint) GIMP_COLOR_TAG_VIOLET", "7"),
    ("(gint) GIMP_COLOR_TAG_YELLOW", "3"),
    ("(gint) GIMP_COLOR_TRANSFORM_FLAGS_BLACK_POINT_COMPENSATION", "8192"),
    ("(gint) GIMP_COLOR_TRANSFORM_FLAGS_GAMUT_CHECK", "4096"),
    ("(gint) GIMP_COLOR_TRANSFORM_FLAGS_NOOPTIMIZE", "256"),
    ("(gint) GIMP_COMPONENT_TYPE_DOUBLE", "700"),
    ("(gint) GIMP_COMPONENT_TYPE_FLOAT", "600"),
    ("(gint) GIMP_COMPONENT_TYPE_HALF", "500"),
    ("(gint) GIMP_COMPONENT_TYPE_U16", "200"),
    ("(gint) GIMP_COMPONENT_TYPE_U32", "300"),
    ("(gint) GIMP_COMPONENT_TYPE_U8", "100"),
    ("(gint) GIMP_CONFIG_ERROR_OPEN", "0"),
    ("(gint) GIMP_CONFIG_ERROR_OPEN_ENOENT", "1"),
    ("(gint) GIMP_CONFIG_ERROR_PARSE", "3"),
    ("(gint) GIMP_CONFIG_ERROR_VERSION", "4"),
    ("(gint) GIMP_CONFIG_ERROR_WRITE", "2"),
    ("GIMP_CONFIG_PARAM_AGGREGATE", "2"),
    ("GIMP_CONFIG_PARAM_CONFIRM", "8"),
    ("GIMP_CONFIG_PARAM_DEFAULTS", "16"),
    ("GIMP_CONFIG_PARAM_DONT_COMPARE", "64"),
    ("GIMP_CONFIG_PARAM_FLAGS", "7"),
    ("GIMP_CONFIG_PARAM_FLAG_SHIFT", "7"),
    ("GIMP_CONFIG_PARAM_IGNORE", "32"),
    ("GIMP_CONFIG_PARAM_RESTART", "4"),
    ("GIMP_CONFIG_PARAM_SERIALIZE", "1"),
    ("(gint) GIMP_CONFIG_PATH_DIR", "2"),
    ("(gint) GIMP_CONFIG_PATH_DIR_LIST", "3"),
    ("(gint) GIMP_CONFIG_PATH_FILE", "0"),
    ("(gint) GIMP_CONFIG_PATH_FILE_LIST", "1"),
    ("(gint) GIMP_CONSOLE", "1"),
    ("(gint) GIMP_CONVERT_DITHER_FIXED", "3"),
    ("(gint) GIMP_CONVERT_DITHER_FS", "1"),
    ("(gint) GIMP_CONVERT_DITHER_FS_LOWBLEED", "2"),
    ("(gint) GIMP_CONVERT_DITHER_NONE", "0"),
    ("(gint) GIMP_CONVERT_PALETTE_CUSTOM", "3"),
    ("(gint) GIMP_CONVERT_PALETTE_GENERATE", "0"),
    ("(gint) GIMP_CONVERT_PALETTE_MONO", "2"),
    ("(gint) GIMP_CONVERT_PALETTE_WEB", "1"),
    ("(gint) GIMP_CONVOLVE_BLUR", "0"),
    ("(gint) GIMP_CONVOLVE_SHARPEN", "1"),
    ("(gint) GIMP_DESATURATE_AVERAGE", "2"),
    ("(gint) GIMP_DESATURATE_LIGHTNESS", "0"),
    ("(gint) GIMP_DESATURATE_LUMA", "1"),
    ("(gint) GIMP_DESATURATE_LUMINANCE", "3"),
    ("(gint) GIMP_DESATURATE_VALUE", "4"),
    ("(gint) GIMP_DODGE_BURN_TYPE_BURN", "1"),
    ("(gint) GIMP_DODGE_BURN_TYPE_DODGE", "0"),
    ("(gint) GIMP_ERROR_CONSOLE", "2"),
    ("(gint) GIMP_EXPAND_AS_NECESSARY", "0"),
    ("(guint) GIMP_EXPORT_CAN_HANDLE_ALPHA", "16"),
    ("(guint) GIMP_EXPORT_CAN_HANDLE_BITMAP", "8"),
    ("(guint) GIMP_EXPORT_CAN_HANDLE_GRAY", "2"),
    ("(guint) GIMP_EXPORT_CAN_HANDLE_INDEXED", "4"),
    ("(guint) GIMP_EXPORT_CAN_HANDLE_LAYERS", "32"),
    ("(guint) GIMP_EXPORT_CAN_HANDLE_LAYERS_AS_ANIMATION", "64"),
    ("(guint) GIMP_EXPORT_CAN_HANDLE_LAYER_EFFECTS", "256"),
    ("(guint) GIMP_EXPORT_CAN_HANDLE_LAYER_MASKS", "128"),
    ("(guint) GIMP_EXPORT_CAN_HANDLE_RGB", "1"),
    ("(gint) GIMP_EXPORT_EXPORT", "1"),
    ("(gint) GIMP_EXPORT_IGNORE", "0"),
    ("(guint) GIMP_EXPORT_NEEDS_ALPHA", "512"),
    ("(guint) GIMP_EXPORT_NEEDS_CROP", "1024"),
    ("(gint) GIMP_FILL_BACKGROUND", "1"),
    ("(gint) GIMP_FILL_CIELAB_MIDDLE_GRAY", "2"),
    ("(gint) GIMP_FILL_FOREGROUND", "0"),
    ("(gint) GIMP_FILL_PATTERN", "5"),
    ("(gint) GIMP_FILL_TRANSPARENT", "4"),
    ("(gint) GIMP_FILL_WHITE", "3"),
    ("(gint) GIMP_FLATTEN_IMAGE", "3"),
    ("(gint) GIMP_FOREGROUND_EXTRACT_MATTING", "0"),
    ("(gint) GIMP_GRADIENT_BILINEAR", "1"),
    ("(gint) GIMP_GRADIENT_BLEND_CIE_LAB", "2"),
    ("(gint) GIMP_GRADIENT_BLEND_RGB_LINEAR", "1"),
    ("(gint) GIMP_GRADIENT_BLEND_RGB_PERCEPTUAL", "0"),
    ("(gint) GIMP_GRADIENT_CONICAL_ASYMMETRIC", "5"),
    ("(gint) GIMP_GRADIENT_CONICAL_SYMMETRIC", "4"),
    ("(gint) GIMP_GRADIENT_LINEAR", "0"),
    ("(gint) GIMP_GRADIENT_RADIAL", "2"),
    ("(gint) GIMP_GRADIENT_SEGMENT_CURVED", "1"),
    ("(gint) GIMP_GRADIENT_SEGMENT_HSV_CCW", "1"),
    ("(gint) GIMP_GRADIENT_SEGMENT_HSV_CW", "2"),
    ("(gint) GIMP_GRADIENT_SEGMENT_LINEAR", "0"),
    ("(gint) GIMP_GRADIENT_SEGMENT_RGB", "0"),
    ("(gint) GIMP_GRADIENT_SEGMENT_SINE", "2"),
    ("(gint) GIMP_GRADIENT_SEGMENT_SPHERE_DECREASING", "4"),
    ("(gint) GIMP_GRADIENT_SEGMENT_SPHERE_INCREASING", "3"),
    ("(gint) GIMP_GRADIENT_SEGMENT_STEP", "5"),
    ("(gint) GIMP_GRADIENT_SHAPEBURST_ANGULAR", "6"),
    ("(gint) GIMP_GRADIENT_SHAPEBURST_DIMPLED", "8"),
    ("(gint) GIMP_GRADIENT_SHAPEBURST_SPHERICAL", "7"),
    ("(gint) GIMP_GRADIENT_SPIRAL_ANTICLOCKWISE", "10"),
    ("(gint) GIMP_GRADIENT_SPIRAL_CLOCKWISE", "9"),
    ("(gint) GIMP_GRADIENT_SQUARE", "3"),
    ("(gint) GIMP_GRAY", "1"),
    ("(gint) GIMP_GRAYA_IMAGE", "3"),
    ("(gint) GIMP_GRAY_IMAGE", "2"),
    ("(gint) GIMP_GRID_DOTS", "0"),
    ("(gint) GIMP_GRID_DOUBLE_DASH", "3"),
    ("(gint) GIMP_GRID_INTERSECTIONS", "1"),
    ("(gint) GIMP_GRID_ON_OFF_DASH", "2"),
    ("(gint) GIMP_GRID_SOLID", "4"),
    ("(gint) GIMP_HISTOGRAM_ALPHA", "4"),
    ("(gint) GIMP_HISTOGRAM_BLUE", "3"),
    ("(gint) GIMP_HISTOGRAM_GREEN", "2"),
    ("(gint) GIMP_HISTOGRAM_LUMINANCE", "5"),
    ("(gint) GIMP_HISTOGRAM_RED", "1"),
    ("(gint) GIMP_HISTOGRAM_VALUE", "0"),
    ("(gint) GIMP_HUE_RANGE_ALL", "0"),
    ("(gint) GIMP_HUE_RANGE_BLUE", "5"),
    ("(gint) GIMP_HUE_RANGE_CYAN", "4"),
    ("(gint) GIMP_HUE_RANGE_GREEN", "3"),
    ("(gint) GIMP_HUE_RANGE_MAGENTA", "6"),
    ("(gint) GIMP_HUE_RANGE_RED", "1"),
    ("(gint) GIMP_HUE_RANGE_YELLOW", "2"),
    ("(gint) GIMP_ICON_TYPE_ICON_NAME", "0"),
    ("(gint) GIMP_ICON_TYPE_IMAGE_FILE", "2"),
    ("(gint) GIMP_ICON_TYPE_PIXBUF", "1"),
    ("(gint) GIMP_INDEXED", "2"),
    ("(gint) GIMP_INDEXEDA_IMAGE", "5"),
    ("(gint) GIMP_INDEXED_IMAGE", "4"),
    ("(gint) GIMP_INK_BLOB_TYPE_CIRCLE", "0"),
    ("(gint) GIMP_INK_BLOB_TYPE_DIAMOND", "2"),
    ("(gint) GIMP_INK_BLOB_TYPE_SQUARE", "1"),
    ("(gint) GIMP_INTERPOLATION_CUBIC", "2"),
    ("(gint) GIMP_INTERPOLATION_LINEAR", "1"),
    ("(gint) GIMP_INTERPOLATION_LOHALO", "4"),
    ("(gint) GIMP_INTERPOLATION_NOHALO", "3"),
    ("(gint) GIMP_INTERPOLATION_NONE", "0"),
    ("(gint) GIMP_JOIN_BEVEL", "2"),
    ("(gint) GIMP_JOIN_MITER", "0"),
    ("(gint) GIMP_JOIN_ROUND", "1"),
    ("(gint) GIMP_LAYER_COLOR_SPACE_AUTO", "0"),
    ("(gint) GIMP_LAYER_COLOR_SPACE_LAB", "3"),
    ("(gint) GIMP_LAYER_COLOR_SPACE_RGB_LINEAR", "1"),
    ("(gint) GIMP_LAYER_COLOR_SPACE_RGB_NON_LINEAR", "2"),
    ("(gint) GIMP_LAYER_COLOR_SPACE_RGB_PERCEPTUAL", "4"),
    ("(gint) GIMP_LAYER_COMPOSITE_AUTO", "0"),
    ("(gint) GIMP_LAYER_COMPOSITE_CLIP_TO_BACKDROP", "2"),
    ("(gint) GIMP_LAYER_COMPOSITE_CLIP_TO_LAYER", "3"),
    ("(gint) GIMP_LAYER_COMPOSITE_INTERSECTION", "4"),
    ("(gint) GIMP_LAYER_COMPOSITE_UNION", "1"),
    ("(gint) GIMP_LAYER_MODE_ADDITION", "33"),
    ("(gint) GIMP_LAYER_MODE_ADDITION_LEGACY", "7"),
    ("(gint) GIMP_LAYER_MODE_BEHIND", "29"),
    ("(gint) GIMP_LAYER_MODE_BEHIND_LEGACY", "2"),
    ("(gint) GIMP_LAYER_MODE_BURN", "43"),
    ("(gint) GIMP_LAYER_MODE_BURN_LEGACY", "17"),
    ("(gint) GIMP_LAYER_MODE_COLOR_ERASE", "57"),
    ("(gint) GIMP_LAYER_MODE_COLOR_ERASE_LEGACY", "22"),
    ("(gint) GIMP_LAYER_MODE_DARKEN_ONLY", "35"),
    ("(gint) GIMP_LAYER_MODE_DARKEN_ONLY_LEGACY", "9"),
    ("(gint) GIMP_LAYER_MODE_DIFFERENCE", "32"),
    ("(gint) GIMP_LAYER_MODE_DIFFERENCE_LEGACY", "6"),
    ("(gint) GIMP_LAYER_MODE_DISSOLVE", "1"),
    ("(gint) GIMP_LAYER_MODE_DIVIDE", "41"),
    ("(gint) GIMP_LAYER_MODE_DIVIDE_LEGACY", "15"),
    ("(gint) GIMP_LAYER_MODE_DODGE", "42"),
    ("(gint) GIMP_LAYER_MODE_DODGE_LEGACY", "16"),
    ("(gint) GIMP_LAYER_MODE_ERASE", "58"),
    ("(gint) GIMP_LAYER_MODE_EXCLUSION", "52"),
    ("(gint) GIMP_LAYER_MODE_GRAIN_EXTRACT", "46"),
    ("(gint) GIMP_LAYER_MODE_GRAIN_EXTRACT_LEGACY", "20"),
    ("(gint) GIMP_LAYER_MODE_GRAIN_MERGE", "47"),
    ("(gint) GIMP_LAYER_MODE_GRAIN_MERGE_LEGACY", "21"),
    ("(gint) GIMP_LAYER_MODE_HARDLIGHT", "44"),
    ("(gint) GIMP_LAYER_MODE_HARDLIGHT_LEGACY", "18"),
    ("(gint) GIMP_LAYER_MODE_HARD_MIX", "51"),
    ("(gint) GIMP_LAYER_MODE_HSL_COLOR", "39"),
    ("(gint) GIMP_LAYER_MODE_HSL_COLOR_LEGACY", "13"),
    ("(gint) GIMP_LAYER_MODE_HSV_HUE", "37"),
    ("(gint) GIMP_LAYER_MODE_HSV_HUE_LEGACY", "11"),
    ("(gint) GIMP_LAYER_MODE_HSV_SATURATION", "38"),
    ("(gint) GIMP_LAYER_MODE_HSV_SATURATION_LEGACY", "12"),
    ("(gint) GIMP_LAYER_MODE_HSV_VALUE", "40"),
    ("(gint) GIMP_LAYER_MODE_HSV_VALUE_LEGACY", "14"),
    ("(gint) GIMP_LAYER_MODE_LCH_CHROMA", "25"),
    ("(gint) GIMP_LAYER_MODE_LCH_COLOR", "26"),
    ("(gint) GIMP_LAYER_MODE_LCH_HUE", "24"),
    ("(gint) GIMP_LAYER_MODE_LCH_LIGHTNESS", "27"),
    ("(gint) GIMP_LAYER_MODE_LIGHTEN_ONLY", "36"),
    ("(gint) GIMP_LAYER_MODE_LIGHTEN_ONLY_LEGACY", "10"),
    ("(gint) GIMP_LAYER_MODE_LINEAR_BURN", "53"),
    ("(gint) GIMP_LAYER_MODE_LINEAR_LIGHT", "50"),
    ("(gint) GIMP_LAYER_MODE_LUMA_DARKEN_ONLY", "54"),
    ("(gint) GIMP_LAYER_MODE_LUMA_LIGHTEN_ONLY", "55"),
    ("(gint) GIMP_LAYER_MODE_LUMINANCE", "56"),
    ("(gint) GIMP_LAYER_MODE_MERGE", "59"),
    ("(gint) GIMP_LAYER_MODE_MULTIPLY", "30"),
    ("(gint) GIMP_LAYER_MODE_MULTIPLY_LEGACY", "3"),
    ("(gint) GIMP_LAYER_MODE_NORMAL", "28"),
    ("(gint) GIMP_LAYER_MODE_NORMAL_LEGACY", "0"),
    ("(gint) GIMP_LAYER_MODE_OVERLAY", "23"),
    ("(gint) GIMP_LAYER_MODE_OVERLAY_LEGACY", "5"),
    ("(gint) GIMP_LAYER_MODE_PASS_THROUGH", "61"),
    ("(gint) GIMP_LAYER_MODE_PIN_LIGHT", "49"),
    ("(gint) GIMP_LAYER_MODE_REPLACE", "62"),
    ("(gint) GIMP_LAYER_MODE_SCREEN", "31"),
    ("(gint) GIMP_LAYER_MODE_SCREEN_LEGACY", "4"),
    ("(gint) GIMP_LAYER_MODE_SOFTLIGHT", "45"),
    ("(gint) GIMP_LAYER_MODE_SOFTLIGHT_LEGACY", "19"),
    ("(gint) GIMP_LAYER_MODE_SPLIT", "60"),
    ("(gint) GIMP_LAYER_MODE_SUBTRACT", "34"),
    ("(gint) GIMP_LAYER_MODE_SUBTRACT_LEGACY", "8"),
    ("(gint) GIMP_LAYER_MODE_VIVID_LIGHT", "48"),
    ("GIMP_MAJOR_VERSION", "3"),
    ("(gint) GIMP_MASK_APPLY", "0"),
    ("(gint) GIMP_MASK_DISCARD", "1"),
    ("GIMP_MAX_IMAGE_SIZE", "524288"),
    ("GIMP_MAX_RESOLUTION", "1048576.000000"),
    ("(gint) GIMP_MESSAGE_BOX", "0"),
    ("(gint) GIMP_METADATA_COLORSPACE_ADOBERGB", "3"),
    ("(gint) GIMP_METADATA_COLORSPACE_SRGB", "2"),
    ("(gint) GIMP_METADATA_COLORSPACE_UNCALIBRATED", "1"),
    ("(gint) GIMP_METADATA_COLORSPACE_UNSPECIFIED", "0"),
    ("(guint) GIMP_METADATA_LOAD_ALL", "4294967295"),
    ("(guint) GIMP_METADATA_LOAD_COLORSPACE", "8"),
    ("(guint) GIMP_METADATA_LOAD_COMMENT", "1"),
    ("(guint) GIMP_METADATA_LOAD_NONE", "0"),
    ("(guint) GIMP_METADATA_LOAD_ORIENTATION", "4"),
    ("(guint) GIMP_METADATA_LOAD_RESOLUTION", "2"),
    ("(guint) GIMP_METADATA_SAVE_ALL", "4294967295"),
    ("(guint) GIMP_METADATA_SAVE_COLOR_PROFILE", "16"),
    ("(guint) GIMP_METADATA_SAVE_COMMENT", "32"),
    ("(guint) GIMP_METADATA_SAVE_EXIF", "1"),
    ("(guint) GIMP_METADATA_SAVE_IPTC", "4"),
    ("(guint) GIMP_METADATA_SAVE_THUMBNAIL", "8"),
    ("(guint) GIMP_METADATA_SAVE_XMP", "2"),
    ("GIMP_MICRO_VERSION", "0"),
    ("GIMP_MINOR_VERSION", "0"),
    ("GIMP_MIN_IMAGE_SIZE", "1"),
    ("GIMP_MIN_RESOLUTION", "0.005000"),
    ("GIMP_MODULE_ABI_VERSION", "5"),
    ("(gint) GIMP_MODULE_FAILED", "0"),
    ("(gint) GIMP_MODULE_STATE_ERROR", "0"),
    ("(gint) GIMP_MODULE_STATE_LOADED", "1"),
    ("(gint) GIMP_MODULE_STATE_LOAD_FAILED", "2"),
    ("(gint) GIMP_MODULE_STATE_NOT_LOADED", "3"),
    ("(gint) GIMP_OFFSET_COLOR", "0"),
    ("(gint) GIMP_OFFSET_TRANSPARENT", "1"),
    ("(gint) GIMP_OFFSET_WRAP_AROUND", "2"),
    ("(gint) GIMP_ORIENTATION_HORIZONTAL", "0"),
    ("(gint) GIMP_ORIENTATION_UNKNOWN", "2"),
    ("(gint) GIMP_ORIENTATION_VERTICAL", "1"),
    ("(gint) GIMP_PAINT_CONSTANT", "0"),
    ("(gint) GIMP_PAINT_INCREMENTAL", "1"),
    ("GIMP_PARAM_DONT_SERIALIZE", "2"),
    ("GIMP_PARAM_FLAG_SHIFT", "2"),
    ("GIMP_PARAM_NO_VALIDATE", "1"),
    ("GIMP_PARAM_READABLE", "1"),
    ("GIMP_PARAM_READWRITE", "3"),
    ("GIMP_PARAM_STATIC_STRINGS", "224"),
    ("GIMP_PARAM_WRITABLE", "2"),
    ("GIMP_PARASITE_ATTACH_GRANDPARENT", "8388608"),
    ("GIMP_PARASITE_ATTACH_PARENT", "32768"),
    ("GIMP_PARASITE_GRANDPARENT_PERSISTENT", "0"),
    ("GIMP_PARASITE_GRANDPARENT_UNDOABLE", "0"),
    ("GIMP_PARASITE_PARENT_PERSISTENT", "0"),
    ("GIMP_PARASITE_PARENT_UNDOABLE", "0"),
    ("GIMP_PARASITE_PERSISTENT", "1"),
    ("GIMP_PARASITE_UNDOABLE", "2"),
    ("(gint) GIMP_PATH_STROKE_TYPE_BEZIER", "0"),
    ("(gint) GIMP_PDB_CALLING_ERROR", "1"),
    ("(gint) GIMP_PDB_CANCEL", "4"),
    ("(gint) GIMP_PDB_ERROR_HANDLER_INTERNAL", "0"),
    ("(gint) GIMP_PDB_ERROR_HANDLER_PLUGIN", "1"),
    ("(gint) GIMP_PDB_EXECUTION_ERROR", "0"),
    ("(gint) GIMP_PDB_PASS_THROUGH", "2"),
    ("(gint) GIMP_PDB_PROC_TYPE_INTERNAL", "0"),
    ("(gint) GIMP_PDB_PROC_TYPE_PERSISTENT", "2"),
    ("(gint) GIMP_PDB_PROC_TYPE_PLUGIN", "1"),
    ("(gint) GIMP_PDB_PROC_TYPE_TEMPORARY", "3"),
    ("(gint) GIMP_PDB_SUCCESS", "3"),
    ("(gint) GIMP_PIXBUF_KEEP_ALPHA", "0"),
    ("(gint) GIMP_PIXBUF_LARGE_CHECKS", "2"),
    ("(gint) GIMP_PIXBUF_SMALL_CHECKS", "1"),
    ("(gint) GIMP_PIXELS", "0"),
    ("GIMP_PIXPIPE_MAXDIM", "4"),
    ("(gint) GIMP_POINTS", "1"),
    ("(gint) GIMP_PRECISION_DOUBLE_LINEAR", "700"),
    ("(gint) GIMP_PRECISION_DOUBLE_NON_LINEAR", "750"),
    ("(gint) GIMP_PRECISION_DOUBLE_PERCEPTUAL", "775"),
    ("(gint) GIMP_PRECISION_FLOAT_LINEAR", "600"),
    ("(gint) GIMP_PRECISION_FLOAT_NON_LINEAR", "650"),
    ("(gint) GIMP_PRECISION_FLOAT_PERCEPTUAL", "675"),
    ("(gint) GIMP_PRECISION_HALF_LINEAR", "500"),
    ("(gint) GIMP_PRECISION_HALF_NON_LINEAR", "550"),
    ("(gint) GIMP_PRECISION_HALF_PERCEPTUAL", "575"),
    ("(gint) GIMP_PRECISION_U16_LINEAR", "200"),
    ("(gint) GIMP_PRECISION_U16_NON_LINEAR", "250"),
    ("(gint) GIMP_PRECISION_U16_PERCEPTUAL", "275"),
    ("(gint) GIMP_PRECISION_U32_LINEAR", "300"),
    ("(gint) GIMP_PRECISION_U32_NON_LINEAR", "350"),
    ("(gint) GIMP_PRECISION_U32_PERCEPTUAL", "375"),
    ("(gint) GIMP_PRECISION_U8_LINEAR", "100"),
    ("(gint) GIMP_PRECISION_U8_NON_LINEAR", "150"),
    ("(gint) GIMP_PRECISION_U8_PERCEPTUAL", "175"),
    ("(guint) GIMP_PROCEDURE_SENSITIVE_ALWAYS", "2147483647"),
    ("(guint) GIMP_PROCEDURE_SENSITIVE_DRAWABLE", "1"),
    ("(guint) GIMP_PROCEDURE_SENSITIVE_DRAWABLES", "4"),
    ("(guint) GIMP_PROCEDURE_SENSITIVE_NO_DRAWABLES", "8"),
    ("(guint) GIMP_PROCEDURE_SENSITIVE_NO_IMAGE", "16"),
    ("(gint) GIMP_PROGRESS_COMMAND_END", "1"),
    ("(gint) GIMP_PROGRESS_COMMAND_GET_WINDOW", "5"),
    ("(gint) GIMP_PROGRESS_COMMAND_PULSE", "4"),
    ("(gint) GIMP_PROGRESS_COMMAND_SET_TEXT", "2"),
    ("(gint) GIMP_PROGRESS_COMMAND_SET_VALUE", "3"),
    ("(gint) GIMP_PROGRESS_COMMAND_START", "0"),
    ("(gint) GIMP_REPEAT_NONE", "0"),
    ("(gint) GIMP_REPEAT_SAWTOOTH", "2"),
    ("(gint) GIMP_REPEAT_TRIANGULAR", "3"),
    ("(gint) GIMP_REPEAT_TRUNCATE", "1"),
    ("(gint) GIMP_RGB", "0"),
    ("(gint) GIMP_RGBA_IMAGE", "1"),
    ("(gint) GIMP_RGB_IMAGE", "0"),
    ("(gint) GIMP_ROTATE_DEGREES180", "1"),
    ("(gint) GIMP_ROTATE_DEGREES270", "2"),
    ("(gint) GIMP_ROTATE_DEGREES90", "0"),
    ("(gint) GIMP_RUN_INTERACTIVE", "0"),
    ("(gint) GIMP_RUN_NONINTERACTIVE", "1"),
    ("(gint) GIMP_RUN_WITH_LAST_VALS", "2"),
    ("(gint) GIMP_SELECT_CRITERION_ALPHA", "10"),
    ("(gint) GIMP_SELECT_CRITERION_COMPOSITE", "0"),
    ("(gint) GIMP_SELECT_CRITERION_HSV_HUE", "4"),
    ("(gint) GIMP_SELECT_CRITERION_HSV_SATURATION", "5"),
    ("(gint) GIMP_SELECT_CRITERION_HSV_VALUE", "6"),
    ("(gint) GIMP_SELECT_CRITERION_LCH_CHROMA", "8"),
    ("(gint) GIMP_SELECT_CRITERION_LCH_HUE", "9"),
    ("(gint) GIMP_SELECT_CRITERION_LCH_LIGHTNESS", "7"),
    ("(gint) GIMP_SELECT_CRITERION_RGB_BLUE", "3"),
    ("(gint) GIMP_SELECT_CRITERION_RGB_GREEN", "2"),
    ("(gint) GIMP_SELECT_CRITERION_RGB_RED", "1"),
    ("(gint) GIMP_STACK_TRACE_ALWAYS", "2"),
    ("(gint) GIMP_STACK_TRACE_NEVER", "0"),
    ("(gint) GIMP_STACK_TRACE_QUERY", "1"),
    ("(gint) GIMP_STROKE_LINE", "0"),
    ("(gint) GIMP_STROKE_PAINT_METHOD", "1"),
    ("(gint) GIMP_TEXT_DIRECTION_LTR", "0"),
    ("(gint) GIMP_TEXT_DIRECTION_RTL", "1"),
    ("(gint) GIMP_TEXT_DIRECTION_TTB_LTR", "4"),
    ("(gint) GIMP_TEXT_DIRECTION_TTB_LTR_UPRIGHT", "5"),
    ("(gint) GIMP_TEXT_DIRECTION_TTB_RTL", "2"),
    ("(gint) GIMP_TEXT_DIRECTION_TTB_RTL_UPRIGHT", "3"),
    ("(gint) GIMP_TEXT_HINT_STYLE_FULL", "3"),
    ("(gint) GIMP_TEXT_HINT_STYLE_MEDIUM", "2"),
    ("(gint) GIMP_TEXT_HINT_STYLE_NONE", "0"),
    ("(gint) GIMP_TEXT_HINT_STYLE_SLIGHT", "1"),
    ("(gint) GIMP_TEXT_JUSTIFY_CENTER", "2"),
    ("(gint) GIMP_TEXT_JUSTIFY_FILL", "3"),
    ("(gint) GIMP_TEXT_JUSTIFY_LEFT", "0"),
    ("(gint) GIMP_TEXT_JUSTIFY_RIGHT", "1"),
    ("(gint) GIMP_TRANSFER_HIGHLIGHTS", "2"),
    ("(gint) GIMP_TRANSFER_MIDTONES", "1"),
    ("(gint) GIMP_TRANSFER_SHADOWS", "0"),
    ("(gint) GIMP_TRANSFORM_BACKWARD", "1"),
    ("(gint) GIMP_TRANSFORM_FORWARD", "0"),
    ("(gint) GIMP_TRANSFORM_RESIZE_ADJUST", "0"),
    ("(gint) GIMP_TRANSFORM_RESIZE_CLIP", "1"),
    ("(gint) GIMP_TRANSFORM_RESIZE_CROP", "2"),
    ("(gint) GIMP_TRANSFORM_RESIZE_CROP_WITH_ASPECT", "3"),
    ("(gint) GIMP_UNIT_END", "5"),
    ("(gint) GIMP_UNIT_INCH", "1"),
    ("(gint) GIMP_UNIT_MM", "2"),
    ("(gint) GIMP_UNIT_PERCENT", "65536"),
    ("(gint) GIMP_UNIT_PICA", "4"),
    ("(gint) GIMP_UNIT_PIXEL", "0"),
    ("(gint) GIMP_UNIT_POINT", "3"),
    ("GIMP_VERSION", "3.0.0-RC2"),
];


